generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URI")
}

enum ApplicationStatus {
  PENDING
  ACCEPTED
  DECLINED
}

model User {
  id                 Int      @id @default(autoincrement())
  email              String   @unique
  passwordHash       String?
  firstName          String?
  lastName           String?
  avatarUrl          String?
  signupToken        String?
  resetPasswordToken String?
  oauthGoogle        Boolean
  isEmailVerified    Boolean  @default(false)
  createdOn          DateTime @default(now())
}

model Industry {
  id          Int     @id @default(autoincrement())
  name        String
  description String?
}

model Employer {
  id              Int      @id @default(autoincrement())
  userId          Int
  name            String
  location        String?
  numberOfWorkers Int?
  averageRating   Int      @default(0)
  createdOn       DateTime @default(now())
}

model Job {
  id          Int      @id @default(autoincrement())
  employerId  Int
  title       String
  description String?
  location    String?
  salaryFrom  Int?
  salaryTo    Int?
  createdOn   DateTime @default(now())
}

model Resume {
  id        Int      @id @default(autoincrement())
  userId    Int?
  title     String
  content   String?
  createdOn DateTime @default(now())
}

model Application {
  id        Int      @id @default(autoincrement())
  userId    Int?
  jobId     Int?
  resumeId  Int?
  status    String
  createdOn DateTime @default(now())
}

model Token {
  id        Int       @id @default(autoincrement())
  userId    Int?
  value     String
  createdOn DateTime  @default(now())
  expiresOn DateTime?
}

model Review {
  id         Int      @id @default(autoincrement())
  employerId Int?
  userId     Int?
  rating     Int
  comments   String?
  createdOn  DateTime @default(now())
}

model Comment {
  id        Int      @id @default(autoincrement())
  userId    Int?
  jobId     Int?
  text      String
  createdOn DateTime @default(now())
}

model Feedback {
  id            Int      @id @default(autoincrement())
  employerId    Int?
  applicationId Int?
  content       String?
  createdOn     DateTime @default(now())
}

model Employer_Industry {
  id         Int  @id @default(autoincrement())
  employerId Int?
  industryId Int?
}

model Admin {
  id                 Int     @id @default(autoincrement())
  userId             Int?
  canEditJobs        Boolean @default(false)
  canDeleteUsers     Boolean @default(false)
  canManageEmployers Boolean @default(false)
  canEditReviews     Boolean @default(false)
}
